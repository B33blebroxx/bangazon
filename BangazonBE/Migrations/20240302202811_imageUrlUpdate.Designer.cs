// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BangazonBE.Migrations
{
    [DbContext(typeof(BangazonBEDbContext))]
    [Migration("20240302202811_imageUrlUpdate")]
    partial class imageUrlUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BangazonBE.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Smart TVs"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Gaming Accessories"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Headphones"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Books"
                        });
                });

            modelBuilder.Entity("BangazonBE.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("boolean");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CustomerId = 2,
                            IsComplete = true,
                            PaymentTypeId = 3
                        },
                        new
                        {
                            Id = 2,
                            CustomerId = 1,
                            IsComplete = false
                        },
                        new
                        {
                            Id = 3,
                            CustomerId = 1,
                            IsComplete = true,
                            PaymentTypeId = 2
                        },
                        new
                        {
                            Id = 4,
                            CustomerId = 4,
                            IsComplete = false
                        },
                        new
                        {
                            Id = 5,
                            CustomerId = 3,
                            IsComplete = true,
                            PaymentTypeId = 1
                        });
                });

            modelBuilder.Entity("BangazonBE.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("PaymentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("PaymentTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PaymentName = "PayPal"
                        },
                        new
                        {
                            Id = 2,
                            PaymentName = "Debit"
                        },
                        new
                        {
                            Id = 3,
                            PaymentName = "Credit"
                        });
                });

            modelBuilder.Entity("BangazonBE.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric");

                    b.Property<int>("QuantityAvailable")
                        .HasColumnType("integer");

                    b.Property<int?>("SellerId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "Super high def QLED display with crazy powerful processor for 8K upscaling.",
                            ImageUrl = "https://c8.alamy.com/comp/D3C9R8/smart-tv-with-samsung-apps-and-web-browser-D3C9R8.jpg",
                            Name = "65 Inch Samsung Smart TV",
                            Price = 2999.99m,
                            QuantityAvailable = 10,
                            SellerId = 5
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Description = "Memory foam seat, armrests, and headrest, adjustable lumbar support, and breatheable fabric.",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQRi83YREwGa67Zs-_OBjT_EjTitdaxkncb-ozkmrPvNbeaO-q27LOVqPB5fYBfPBBxuLk&usqp=CAU",
                            Name = "Gaming Chair",
                            Price = 449.99m,
                            QuantityAvailable = 7,
                            SellerId = 1
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Bluetooth DualSense Edge controller for the Playstation 5.",
                            ImageUrl = "https://www.shutterstock.com/image-vector/tokyo-2021-sony-play-station-260nw-2085889891.jpg",
                            Name = "Wireless PS5 Controller",
                            Price = 169.99m,
                            QuantityAvailable = 15,
                            SellerId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "High quality audio output, 6 hour battery life, full noise cancellation.",
                            ImageUrl = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRW0lOAR5jVc0pZqExthLSMqvjPFuwxx9CBzQ&usqp=CAU",
                            Name = "Wireless Headphones",
                            Price = 219.99m,
                            QuantityAvailable = 3,
                            SellerId = 4
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "A top notch 4k streaming experience at a low price.",
                            ImageUrl = "https://www.shutterstock.com/image-photo/young-woman-sitting-on-sofa-260nw-767180002.jpg",
                            Name = "55 Inch Vizio Smart TV",
                            Price = 499.99m,
                            QuantityAvailable = 20,
                            SellerId = 3
                        });
                });

            modelBuilder.Entity("BangazonBE.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsSeller")
                        .HasColumnType("boolean");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProfileImgUrl")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Uid")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "b33blebroxx@gmail.com",
                            FirstName = "Brandon",
                            IsSeller = true,
                            LastName = "Schnurbusch",
                            ProfileImgUrl = "https://avatars.githubusercontent.com/u/134976580?v=4",
                            Uid = "",
                            UserName = "bschnurb"
                        },
                        new
                        {
                            Id = 2,
                            Email = "sidestoriesLPOTL@gmail.com",
                            FirstName = "Henry",
                            IsSeller = true,
                            LastName = "Zebrowski",
                            ProfileImgUrl = "https://m.media-amazon.com/images/M/MV5BMjE3MTE4NjU0NF5BMl5BanBnXkFtZTgwMDk5NzE5NzE@._V1_.jpg",
                            Uid = "",
                            UserName = "DrFanTasty"
                        },
                        new
                        {
                            Id = 3,
                            Email = "brighterside@gmail.com",
                            FirstName = "Ed",
                            IsSeller = true,
                            LastName = "Larson",
                            ProfileImgUrl = "https://m.media-amazon.com/images/M/MV5BNTIyYWI0ZDMtMTc3Mi00ZGFiLThjZDYtMGNmZDRjMWM0MDQ4XkEyXkFqcGdeQXVyMTI0OTEzNjY@._V1_.jpg",
                            Uid = "",
                            UserName = "Ham"
                        },
                        new
                        {
                            Id = 4,
                            Email = "LPOTL@gmail.com",
                            FirstName = "Marcus",
                            IsSeller = true,
                            LastName = "Parks",
                            ProfileImgUrl = "https://storage.googleapis.com/pkommunity/website/images/Host%20Headshots/marcus-parks.png",
                            Uid = "",
                            UserName = "DogMeat"
                        },
                        new
                        {
                            Id = 5,
                            Email = "holdenatorsHo@gmail.com",
                            FirstName = "Holden",
                            IsSeller = false,
                            LastName = "McNeely",
                            ProfileImgUrl = "https://pbs.twimg.com/profile_images/758335467431616512/RfoPP_jP_400x400.jpg",
                            Uid = "",
                            UserName = "LizardMan"
                        });
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.Property<int>("OrdersId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductsId")
                        .HasColumnType("integer");

                    b.HasKey("OrdersId", "ProductsId");

                    b.HasIndex("ProductsId");

                    b.ToTable("OrderProduct");
                });

            modelBuilder.Entity("BangazonBE.Models.Product", b =>
                {
                    b.HasOne("BangazonBE.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("OrderProduct", b =>
                {
                    b.HasOne("BangazonBE.Models.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BangazonBE.Models.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
